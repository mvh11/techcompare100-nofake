{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxielmakinon\\\\Desktop\\\\techcompare-frontend\\\\TECHCOMPARE-master\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = ({\n  onSuccess\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const toggleMode = () => {\n    setIsLogin(!isLogin);\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!email || !password || !isLogin && !username || !isLogin && !confirmPassword) {\n      setError('Completa todos los campos');\n      return;\n    }\n    if (!isLogin && password !== confirmPassword) {\n      setError('Las contraseñas no coinciden');\n      return;\n    }\n    setLoading(true);\n    try {\n      if (isLogin) {\n        var _raw$_embedded;\n        // LOGIN: GET usuarios y validar email+password\n        const res = await fetch('http://localhost:8080/api/usuarios');\n        if (!res.ok) {\n          const text = await res.text();\n          throw new Error(`GET usuarios falló (${res.status}): ${text}`);\n        }\n        const raw = await res.json();\n        // ❗️ Usamos el array correcto del HAL\n        const list = ((_raw$_embedded = raw._embedded) === null || _raw$_embedded === void 0 ? void 0 : _raw$_embedded.usuarioList) || raw;\n        const user = list.find(u => u.email === email.trim() && u.password === password);\n        if (!user) throw new Error('Email o contraseña incorrectos');\n        onSuccess(user);\n      } else {\n        // REGISTRO: POST con password incluido\n        const payload = {\n          nombre: username.trim(),\n          email: email.trim(),\n          password,\n          gpu1: '',\n          gpu2: ''\n        };\n        const res = await fetch('http://localhost:8080/api/usuarios', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        const text = await res.text();\n        if (!res.ok) {\n          throw new Error(`Error al registrar (${res.status}): ${text}`);\n        }\n        const newUser = JSON.parse(text);\n        onSuccess(newUser);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-8 bg-purple-800 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center text-white\",\n      children: isLogin ? 'Iniciar sesión' : 'Crear cuenta'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-400 mb-4 break-all\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre de usuario\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"w-full p-3 rounded bg-purple-700 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"w-full p-3 rounded bg-purple-700 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"w-full p-3 rounded bg-purple-700 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirmar contrase\\xF1a\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        className: \"w-full p-3 rounded bg-purple-700 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"w-full py-3 bg-purple-600 hover:bg-purple-700 rounded text-white\",\n        children: loading ? isLogin ? 'Entrando…' : 'Registrando…' : isLogin ? 'Entrar' : 'Crear cuenta'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMode,\n      className: \"mt-4 block mx-auto text-sm text-purple-200 hover:underline\",\n      children: isLogin ? '¿No tienes cuenta? Regístrate' : '¿Ya tienes cuenta? Inicia sesión'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"cb8LIKAkK5TU0k3m/Ve0gW4OMCU=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthForm","onSuccess","_s","isLogin","setIsLogin","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","loading","setLoading","toggleMode","handleSubmit","e","preventDefault","_raw$_embedded","res","fetch","ok","text","Error","status","raw","json","list","_embedded","usuarioList","user","find","u","trim","payload","nombre","gpu1","gpu2","method","headers","body","JSON","stringify","newUser","parse","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maxielmakinon/Desktop/techcompare-frontend/TECHCOMPARE-master/src/components/Auth/AuthForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AuthForm = ({ onSuccess }) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail]       = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError]       = useState('');\r\n  const [loading, setLoading]   = useState(false);\r\n\r\n  const toggleMode = () => {\r\n    setIsLogin(!isLogin);\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setError('');\r\n    if (!email || !password || (!isLogin && !username) || (!isLogin && !confirmPassword)) {\r\n      setError('Completa todos los campos');\r\n      return;\r\n    }\r\n    if (!isLogin && password !== confirmPassword) {\r\n      setError('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (isLogin) {\r\n        // LOGIN: GET usuarios y validar email+password\r\n        const res = await fetch('http://localhost:8080/api/usuarios');\r\n        if (!res.ok) {\r\n          const text = await res.text();\r\n          throw new Error(`GET usuarios falló (${res.status}): ${text}`);\r\n        }\r\n        const raw = await res.json();\r\n        // ❗️ Usamos el array correcto del HAL\r\n        const list = raw._embedded?.usuarioList || raw;\r\n        const user = list.find(u =>\r\n          u.email === email.trim() &&\r\n          u.password === password\r\n        );\r\n        if (!user) throw new Error('Email o contraseña incorrectos');\r\n        onSuccess(user);\r\n\r\n      } else {\r\n        // REGISTRO: POST con password incluido\r\n        const payload = {\r\n          nombre:   username.trim(),\r\n          email:    email.trim(),\r\n          password,\r\n          gpu1:     '',\r\n          gpu2:     ''\r\n        };\r\n        const res = await fetch('http://localhost:8080/api/usuarios', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload)\r\n        });\r\n        const text = await res.text();\r\n        if (!res.ok) {\r\n          throw new Error(`Error al registrar (${res.status}): ${text}`);\r\n        }\r\n        const newUser = JSON.parse(text);\r\n        onSuccess(newUser);\r\n      }\r\n\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-8 bg-purple-800 rounded\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-white\">\r\n        {isLogin ? 'Iniciar sesión' : 'Crear cuenta'}\r\n      </h2>\r\n      {error && <p className=\"text-red-400 mb-4 break-all\">{error}</p>}\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        {!isLogin && (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nombre de usuario\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n            className=\"w-full p-3 rounded bg-purple-700 text-white\"\r\n          />\r\n        )}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          className=\"w-full p-3 rounded bg-purple-700 text-white\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          className=\"w-full p-3 rounded bg-purple-700 text-white\"\r\n        />\r\n        {!isLogin && (\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirmar contraseña\"\r\n            value={confirmPassword}\r\n            onChange={e => setConfirmPassword(e.target.value)}\r\n            className=\"w-full p-3 rounded bg-purple-700 text-white\"\r\n          />\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          className=\"w-full py-3 bg-purple-600 hover:bg-purple-700 rounded text-white\"\r\n        >\r\n          {loading\r\n            ? (isLogin ? 'Entrando…' : 'Registrando…')\r\n            : (isLogin ? 'Entrar' : 'Crear cuenta')}\r\n        </button>\r\n      </form>\r\n      <button\r\n        onClick={toggleMode}\r\n        className=\"mt-4 block mx-auto text-sm text-purple-200 hover:underline\"\r\n      >\r\n        {isLogin\r\n          ? '¿No tienes cuenta? Regístrate'\r\n          : '¿Ya tienes cuenta? Inicia sesión'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAASX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAASjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAKnB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMoB,UAAU,GAAGA,CAAA,KAAM;IACvBb,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBW,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMI,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI,CAACP,KAAK,IAAI,CAACE,QAAQ,IAAK,CAACN,OAAO,IAAI,CAACE,QAAS,IAAK,CAACF,OAAO,IAAI,CAACQ,eAAgB,EAAE;MACpFG,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACF;IACA,IAAI,CAACX,OAAO,IAAIM,QAAQ,KAAKE,eAAe,EAAE;MAC5CG,QAAQ,CAAC,8BAA8B,CAAC;MACxC;IACF;IAEAE,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAIb,OAAO,EAAE;QAAA,IAAAkB,cAAA;QACX;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAC7D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UACX,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAI,CAAC,CAAC;UAC7B,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,GAAG,CAACK,MAAM,MAAMF,IAAI,EAAE,CAAC;QAChE;QACA,MAAMG,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;QAC5B;QACA,MAAMC,IAAI,GAAG,EAAAT,cAAA,GAAAO,GAAG,CAACG,SAAS,cAAAV,cAAA,uBAAbA,cAAA,CAAeW,WAAW,KAAIJ,GAAG;QAC9C,MAAMK,IAAI,GAAGH,IAAI,CAACI,IAAI,CAACC,CAAC,IACtBA,CAAC,CAAC5B,KAAK,KAAKA,KAAK,CAAC6B,IAAI,CAAC,CAAC,IACxBD,CAAC,CAAC1B,QAAQ,KAAKA,QACjB,CAAC;QACD,IAAI,CAACwB,IAAI,EAAE,MAAM,IAAIP,KAAK,CAAC,gCAAgC,CAAC;QAC5DzB,SAAS,CAACgC,IAAI,CAAC;MAEjB,CAAC,MAAM;QACL;QACA,MAAMI,OAAO,GAAG;UACdC,MAAM,EAAIjC,QAAQ,CAAC+B,IAAI,CAAC,CAAC;UACzB7B,KAAK,EAAKA,KAAK,CAAC6B,IAAI,CAAC,CAAC;UACtB3B,QAAQ;UACR8B,IAAI,EAAM,EAAE;UACZC,IAAI,EAAM;QACZ,CAAC;QACD,MAAMlB,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UAC5DkB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;QAC9B,CAAC,CAAC;QACF,MAAMZ,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACH,GAAG,CAACE,EAAE,EAAE;UACX,MAAM,IAAIE,KAAK,CAAC,uBAAuBJ,GAAG,CAACK,MAAM,MAAMF,IAAI,EAAE,CAAC;QAChE;QACA,MAAMqB,OAAO,GAAGF,IAAI,CAACG,KAAK,CAACtB,IAAI,CAAC;QAChCxB,SAAS,CAAC6C,OAAO,CAAC;MACpB;IAEF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZlC,QAAQ,CAACkC,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRjC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKmD,SAAS,EAAC,4CAA4C;IAAAC,QAAA,gBACzDpD,OAAA;MAAImD,SAAS,EAAC,gDAAgD;MAAAC,QAAA,EAC3DhD,OAAO,GAAG,gBAAgB,GAAG;IAAc;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EACJ1C,KAAK,iBAAId,OAAA;MAAGmD,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAEtC;IAAK;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChExD,OAAA;MAAMyD,QAAQ,EAAEtC,YAAa;MAACgC,SAAS,EAAC,WAAW;MAAAC,QAAA,GAChD,CAAChD,OAAO,iBACPJ,OAAA;QACE0D,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAEtD,QAAS;QAChBuD,QAAQ,EAAEzC,CAAC,IAAIb,WAAW,CAACa,CAAC,CAAC0C,MAAM,CAACF,KAAK,CAAE;QAC3CT,SAAS,EAAC;MAA6C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CACF,eACDxD,OAAA;QACE0D,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEpD,KAAM;QACbqD,QAAQ,EAAEzC,CAAC,IAAIX,QAAQ,CAACW,CAAC,CAAC0C,MAAM,CAACF,KAAK,CAAE;QACxCT,SAAS,EAAC;MAA6C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACFxD,OAAA;QACE0D,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,eAAY;QACxBC,KAAK,EAAElD,QAAS;QAChBmD,QAAQ,EAAEzC,CAAC,IAAIT,WAAW,CAACS,CAAC,CAAC0C,MAAM,CAACF,KAAK,CAAE;QAC3CT,SAAS,EAAC;MAA6C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,EACD,CAACpD,OAAO,iBACPJ,OAAA;QACE0D,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,yBAAsB;QAClCC,KAAK,EAAEhD,eAAgB;QACvBiD,QAAQ,EAAEzC,CAAC,IAAIP,kBAAkB,CAACO,CAAC,CAAC0C,MAAM,CAACF,KAAK,CAAE;QAClDT,SAAS,EAAC;MAA6C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CACF,eACDxD,OAAA;QACE0D,IAAI,EAAC,QAAQ;QACbK,QAAQ,EAAE/C,OAAQ;QAClBmC,SAAS,EAAC,kEAAkE;QAAAC,QAAA,EAE3EpC,OAAO,GACHZ,OAAO,GAAG,WAAW,GAAG,cAAc,GACtCA,OAAO,GAAG,QAAQ,GAAG;MAAe;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACPxD,OAAA;MACEgE,OAAO,EAAE9C,UAAW;MACpBiC,SAAS,EAAC,4DAA4D;MAAAC,QAAA,EAErEhD,OAAO,GACJ,+BAA+B,GAC/B;IAAkC;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACrD,EAAA,CArIIF,QAAQ;AAAAgE,EAAA,GAARhE,QAAQ;AAuId,eAAeA,QAAQ;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}